<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!-- Generated 05-Nov-2018 15:22:00 by Hibernate Tools 5.3.6.Final --><!DOCTYPE hibernate-mapping PUBLIC "-//Hibernate/Hibernate Mapping DTD 3.0//EN" "http://www.hibernate.org/dtd/hibernate-mapping-3.0.dtd">
<hibernate-mapping auto-import="true" default-access="property" default-cascade="none" default-lazy="true">
    <class catalog="airbnbdb" dynamic-insert="false" dynamic-update="false" mutable="true" name="org.uc3m.ctftw.airbnb.model.Message" optimistic-lock="version" polymorphism="implicit" select-before-update="false" table="message">
        <composite-id class="org.uc3m.ctftw.airbnb.model.MessageId" mapped="false" name="id" unsaved-value="undefined">
            <key-property name="message" type="string">
                <column length="800" name="message"/>
            </key-property>
            <key-property name="date" type="timestamp">
                <column length="26" name="date"/>
            </key-property>
            <key-property name="sender" type="string">
                <column length="100" name="sender"/>
            </key-property>
            <key-property name="receiver" type="string">
                <column length="100" name="receiver"/>
            </key-property>
        </composite-id>
        <many-to-one class="org.uc3m.ctftw.airbnb.model.User" embed-xml="true" fetch="select" insert="false" name="userByReceiver" not-found="exception" optimistic-lock="true" unique="false" update="false">
            <column length="100" name="receiver" not-null="true"/>
        </many-to-one>
        <many-to-one class="org.uc3m.ctftw.airbnb.model.User" embed-xml="true" fetch="select" insert="false" name="userBySender" not-found="exception" optimistic-lock="true" unique="false" update="false">
            <column length="100" name="sender" not-null="true"/>
        </many-to-one>
        <property generated="never" lazy="false" name="isUnread" optimistic-lock="true" type="java.lang.Byte" unique="false">
            <column name="isUnread"/>
        </property>
    </class>
</hibernate-mapping>
